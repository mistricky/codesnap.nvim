name: build and release

on: push 

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            origin_dylib_suffix: so
            dest_dylib_suffix: so

          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            origin_dylib_suffix: dylib
            dest_dylib_suffix: so

          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            origin_dylib_suffix: dylib
            dest_dylib_suffix: so

        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v3

      - name: Build library
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--release --manifest-path ./generator/Cargo.toml"

      - name: Rename dynamic lib
        run: cp generator/target/${{ matrix.platform.target }}/release/libgenerator.${{ matrix.platform.origin_dylib_suffix }} lua/${{ matrix.platform.os_name }}generator.${{ matrix.platform.dest_dylib_suffix }}

      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          message: '[Update] files based on generated files by template generator'
          pull_strategy: 'NO-PULL'
          push: false

      - name: Push changes
        run: |
          git pull --rebase
          git push

      # - name: Commit changes
      #   uses: stefanzweifel/git-auto-commit-action@v5 
      #   with:
      #     commit_message: "[Update] build FFI dynamic library" 
      #     skip_dirty_check: true    
      #     skip_fetch: true

